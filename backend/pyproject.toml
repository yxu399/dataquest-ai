[project]
name = "dataquest-ai-backend"
version = "1.0.0"
description = "DataQuest AI - Intelligent Data Analysis Platform Backend"
authors = [
    {name = "Yingjuan Xu"}
]
requires-python = ">=3.11"

dependencies = [
    # Web Framework
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    # Database
    "sqlalchemy>=2.0.32",
    "psycopg2-binary>=2.9.10",
    "alembic>=1.13.1",
    # AI/LLM
    "langchain>=0.1.0",
    "langgraph>=0.0.20",
    "anthropic>=0.40.0",
    # Data Processing
    "pandas>=2.2.0",
    "numpy>=1.26.0,<3.0.0",
    "plotly>=5.17.0",
    "scipy>=1.12.0",
    # Utilities
    "python-dotenv>=1.0.0",
    "pydantic>=2.8.0",
    "pydantic-settings>=2.4.0",
    # Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    # Validation
    "email-validator>=2.1.1",
    "langchain-anthropic>=0.1.4",
    "langchain-core>=0.1.23",
    "httpx<0.28.0",
]

[tool.uv]
# uv-specific configuration for complete dependency management
dev-dependencies = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "httpx>=0.25.2",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=7.0.0",
    "coverage>=7.10.7",
    "psutil>=7.1.0",
]

# Enable uv to manage all Python environments
managed = true

# Use the fastest resolver
resolution = "highest"

# uv workspace configuration (if needed in future)
# workspace = true

[tool.uv.sources]
# Configure package sources if needed
# For now, using default PyPI

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"

